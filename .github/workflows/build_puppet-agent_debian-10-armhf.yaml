---
name: Build puppet-agent for debain-10-armhf

on:
  # Manually triggered: https://developer.github.com/v3/activity/events/types/#repositorydispatchevent
  repository_dispatch:

env:
  PUPPET_AGENT_VERSION: '${{ github.event.client_payload.version }}'

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      VANAGON_DOCKER_IMAGE: 'sharpie-docker-puppet-dev-images.bintray.io/debian-10-amd64:latest'
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - uses: actions/setup-ruby@v1.1.0
        with:
          ruby-version: '2.5.x'
      - uses: jfrog/setup-jfrog-cli@v1
      - name: Configure Bintray
        env:
          BT_API_KEY: '${{ secrets.BT_API_KEY }}'
        run: |
          jfrog bt config \
            --interactive=false \
            --user=sharpie \
            --key="${BT_API_KEY}"
      - name: Provision build environment
        run: |
          sudo apt-get install -y qemu-user-static

          gem install bundler
          bundle install --path .bundle/lib

          curl -O https://raw.githubusercontent.com/hashicorp/vagrant/master/keys/vagrant
          chmod 0600 vagrant
          printf "::set-env name=VANAGON_SSH_KEY::${GITHUB_WORKSPACE}/vagrant\n"

          docker pull "${VANAGON_DOCKER_IMAGE}"
          docker_run_args=$(docker inspect "${VANAGON_DOCKER_IMAGE}" --format '{{ index .Config.Labels "docker-run-args" }}')
          printf "::set-env name=VANAGON_DOCKER_RUN_ARGS::${docker_run_args}\n"
      - name: Build puppet-runtime
        env:
          VANAGON_SSH_PORT: 4222
        run: |
          export VANAGON_BUILD_VERSION=$(./scripts/component-version.sh puppet-agent "${PUPPET_AGENT_VERSION}" puppet-runtime)
          BINTRAY_VERSION="sharpie/puppet-agent-bin/puppet-runtime/${VANAGON_BUILD_VERSION}"

          if jfrog bt version-show "${BINTRAY_VERSION}"; then
            printf 'Downloading puppet-runtime %s from BinTray\n' "${VANAGON_BUILD_VERSION}"

            mkdir -p output/puppet-runtime/output

            jfrog bt download-ver --flat --unpublished \
              "${BINTRAY_VERSION}" \
              output/puppet-runtime/output
          else
            printf 'Building puppet-runtime %s\n' "${VANAGON_BUILD_VERSION}"

            bundle exec build puppet-runtime debian-10-armhf -e docker

            jfrog bt upload --flat \
              'output/puppet-runtime/output/agent-runtime-*' \
              "${BINTRAY_VERSION}" \
              "puppet-runtime/${VANAGON_BUILD_VERSION}/"
          fi
      - name: Build puppet-agent
        env:
          VANAGON_SSH_PORT: 4223
        run: |
          export VANAGON_BUILD_VERSION="${PUPPET_AGENT_VERSION}"
          BINTRAY_VERSION="sharpie/puppet-experimental-debs/puppet-agent-raspbian-10-armhf/${VANAGON_BUILD_VERSION}"

          if jfrog bt version-show "${BINTRAY_VERSION}"; then
            printf 'Downloading puppet-agent %s from BinTray\n' "${VANAGON_BUILD_VERSION}"

            mkdir -p output/deb/buster/PC1

            jfrog bt download-ver --flat --unpublished \
              "${BINTRAY_VERSION}" \
              output/deb/buster/PC1
          else
            printf 'Building puppet-agent %s\n' "${VANAGON_BUILD_VERSION}"

            bundle exec build puppet-agent debian-10-armhf -e docker

            jfrog bt upload --flat \
              --deb buster/puppet-experimental/armhf \
              'output/deb/buster/PC1/*.deb' \
              "${BINTRAY_VERSION}" \
              "pool/buster/puppet-experimental/p/puppet-agent/"
          fi
      - uses: actions/upload-artifact@v1
        with:
          name: vanagon-output.tar
          path: output
