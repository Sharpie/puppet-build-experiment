From 22e851b799cbf4412e76d5954b54a6c6015c34c9 Mon Sep 17 00:00:00 2001
From: Charlie Sharpsteen <source@sharpsteen.net>
Date: Mon, 29 Apr 2019 22:00:36 -0700
Subject: [PATCH 2/9] Skip runtime-agent for debian armhf

This commit updates the runtime-agent component to be a no-op when built
for the debian-9-armhf or debian-10-armhf platforms. This matches the
behavior of other platforms that bring their own build toolchains.
---
 configs/components/runtime-agent.rb      |  2 +
 configs/components/runtime-agent.rb.orig | 52 ++++++++++++++++++++++++
 2 files changed, 54 insertions(+)
 create mode 100644 configs/components/runtime-agent.rb.orig

diff --git a/configs/components/runtime-agent.rb b/configs/components/runtime-agent.rb
index b2df4e2..a8238f7 100644
--- a/configs/components/runtime-agent.rb
+++ b/configs/components/runtime-agent.rb
@@ -25,6 +25,8 @@ component "runtime-agent" do |pkg, settings, platform|
     pkg.install_file File.join(libdir, "libgcc_s.a"), "/opt/puppetlabs/puppet/lib/libgcc_s.a"
   elsif platform.is_macos? || platform.name =~ /sles-15|el-8|debian-10/ || (platform.is_fedora? && platform.os_version.to_i >= 29)
     # Nothing to see here
+  elsif platform.is_cross_compiled_linux? && platform.name =~ /debian-(?:9|10)/
+    # Nothing to see here either
   elsif platform.is_windows?
     lib_type = platform.architecture == "x64" ? "seh" : "sjlj"
     pkg.install_file "#{settings[:gcc_bindir]}/libgcc_s_#{lib_type}-1.dll", "#{settings[:bindir]}/libgcc_s_#{lib_type}-1.dll"
diff --git a/configs/components/runtime-agent.rb.orig b/configs/components/runtime-agent.rb.orig
new file mode 100644
index 0000000..56c5c1d
--- /dev/null
+++ b/configs/components/runtime-agent.rb.orig
@@ -0,0 +1,52 @@
+# This component exists to link in the gcc and stdc++ runtime libraries as well as libssp.
+component "runtime-agent" do |pkg, settings, platform|
+  pkg.environment "PROJECT_SHORTNAME", "puppet"
+  pkg.add_source "file://resources/files/runtime/runtime.sh"
+
+  if platform.is_cross_compiled?
+    if platform.architecture =~ /aarch64|ppc64$|ppc64le/
+      libdir = File.join("/opt/pl-build-tools", settings[:platform_triple], "lib64")
+    else
+      libdir = File.join("/opt/pl-build-tools", settings[:platform_triple], "lib")
+    end
+  elsif platform.is_aix?
+    libdir = "/opt/pl-build-tools/lib/gcc/powerpc-ibm-aix#{platform.os_version}.0.0/5.2.0/"
+  elsif platform.is_solaris? || platform.architecture =~ /i\d86/
+    libdir = "/opt/pl-build-tools/lib"
+  elsif platform.architecture =~ /64/
+    libdir = "/opt/pl-build-tools/lib64"
+  end
+
+  # The runtime script uses readlink, which is in an odd place on Solaris systems:
+  pkg.environment "PATH", "$(PATH):/opt/csw/gnu" if platform.is_solaris?
+
+  if platform.is_aix?
+    pkg.install_file File.join(libdir, "libstdc++.a"), "/opt/puppetlabs/puppet/lib/libstdc++.a"
+    pkg.install_file File.join(libdir, "libgcc_s.a"), "/opt/puppetlabs/puppet/lib/libgcc_s.a"
+  elsif platform.is_macos? || platform.name =~ /sles-15|el-8|debian-10/ || (platform.is_fedora? && platform.os_version.to_i >= 29)
+    # Nothing to see here
+  elsif platform.is_windows?
+    lib_type = platform.architecture == "x64" ? "seh" : "sjlj"
+    pkg.install_file "#{settings[:gcc_bindir]}/libgcc_s_#{lib_type}-1.dll", "#{settings[:bindir]}/libgcc_s_#{lib_type}-1.dll"
+    pkg.install_file "#{settings[:gcc_bindir]}/libstdc++-6.dll", "#{settings[:bindir]}/libstdc++-6.dll"
+    pkg.install_file "#{settings[:gcc_bindir]}/libwinpthread-1.dll", "#{settings[:bindir]}/libwinpthread-1.dll"
+    pkg.install_file "#{settings[:gcc_bindir]}/libgcc_s_#{lib_type}-1.dll", "#{settings[:facter_root]}/lib/libgcc_s_#{lib_type}-1.dll"
+    pkg.install_file "#{settings[:gcc_bindir]}/libstdc++-6.dll", "#{settings[:facter_root]}/lib/libstdc++-6.dll"
+    pkg.install_file "#{settings[:gcc_bindir]}/libwinpthread-1.dll", "#{settings[:facter_root]}/lib/libwinpthread-1.dll"
+
+    # Curl is dynamically linking against zlib, so we need to include this file until we
+    # update curl to statically link against zlib
+    pkg.install_file "#{settings[:tools_root]}/bin/zlib1.dll", "#{settings[:ruby_bindir]}/zlib1.dll"
+
+    # gdbm, yaml-cpp and iconv are all runtime dependancies of ruby, and their libraries need
+    # To exist inside our vendored ruby
+    pkg.install_file "#{settings[:tools_root]}/bin/libgdbm-4.dll", "#{settings[:ruby_bindir]}/libgdbm-4.dll"
+    pkg.install_file "#{settings[:tools_root]}/bin/libgdbm_compat-4.dll", "#{settings[:ruby_bindir]}/libgdbm_compat-4.dll"
+    pkg.install_file "#{settings[:tools_root]}/bin/libiconv-2.dll", "#{settings[:ruby_bindir]}/libiconv-2.dll"
+    pkg.install_file "#{settings[:tools_root]}/bin/libffi-6.dll", "#{settings[:ruby_bindir]}/libffi-6.dll"
+  else # Linux and Solaris systems
+    pkg.install do
+      "bash runtime.sh #{libdir} puppet"
+    end
+  end
+end
-- 
2.26.2

