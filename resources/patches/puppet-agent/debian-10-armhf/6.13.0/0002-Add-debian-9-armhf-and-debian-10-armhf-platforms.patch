From 1105d08901369da3e82c4210c1b9b154e3bda90c Mon Sep 17 00:00:00 2001
From: Charlie Sharpsteen <source@sharpsteen.net>
Date: Tue, 2 Jul 2019 21:47:52 -0700
Subject: [PATCH 02/13] Add debian-9-armhf and debian-10-armhf platforms

This commit adds a plaform definition for debian-9-armhf and
debian-10-armhf based on debian-10-amd64 and Mike Stahnke's work in:

  https://github.com/puppetlabs/puppet-agent/pull/1362

The definitaions also tweak Debian's /etc/dpkg-cross/cmake/CMakeCross.txt
file to allow additional root directories, such as /opt/puppetlabs/puppet,
to be dynamically added via `-DCMAKE_FIND_ROOT_PATH`.
---
 configs/platforms/debian-10-armhf.rb | 67 ++++++++++++++++++++++++++++
 configs/platforms/debian-9-armhf.rb  | 67 ++++++++++++++++++++++++++++
 2 files changed, 134 insertions(+)
 create mode 100644 configs/platforms/debian-10-armhf.rb
 create mode 100644 configs/platforms/debian-9-armhf.rb

diff --git a/configs/platforms/debian-10-armhf.rb b/configs/platforms/debian-10-armhf.rb
new file mode 100644
index 00000000..c39bbea9
--- /dev/null
+++ b/configs/platforms/debian-10-armhf.rb
@@ -0,0 +1,67 @@
+platform "debian-10-armhf" do |plat|
+  plat.servicedir "/lib/systemd/system"
+  plat.defaultdir "/etc/default"
+  plat.servicetype "systemd"
+  plat.codename "buster"
+  plat.platform_triple "arm-linux-gnueabihf"
+
+  plat.install_build_dependencies_with "DEBIAN_FRONTEND=noninteractive; apt-get install -qy --no-install-recommends "
+
+  plat.provision_with "dpkg --add-architecture #{plat.get_architecture}"
+
+  packages = [
+    'build-essential', # Needed to make dpkg-buildpackage happy
+    'cmake',
+    "crossbuild-essential-#{plat.get_architecture}",
+    'debhelper',
+    'devscripts',
+    'fakeroot',
+    'gettext',
+    "libblkid-dev:#{plat.get_architecture}",
+    "libboost-chrono-dev:#{plat.get_architecture}",
+    "libboost-date-time-dev:#{plat.get_architecture}",
+    "libboost-filesystem-dev:#{plat.get_architecture}",
+    "libboost-locale-dev:#{plat.get_architecture}",
+    "libboost-log-dev:#{plat.get_architecture}",
+    "libboost-program-options-dev:#{plat.get_architecture}",
+    "libboost-random-dev:#{plat.get_architecture}",
+    "libboost-regex-dev:#{plat.get_architecture}",
+    "libboost-system-dev:#{plat.get_architecture}",
+    "libboost-thread-dev:#{plat.get_architecture}",
+    "libc6-dev:#{plat.get_architecture}",
+    "libbz2-dev:#{plat.get_architecture}",
+    "libreadline-dev:#{plat.get_architecture}",
+    "libyaml-cpp-dev:#{plat.get_architecture}",
+    'make',
+    'pkg-config',
+    'qemu-user-static',
+    'quilt',
+    'rsync',
+    "zlib1g-dev:#{plat.get_architecture}",
+  ]
+  plat.provision_with "export DEBIAN_FRONTEND=noninteractive; apt-get update -qq; apt-get install -qy --no-install-recommends #{packages.join(' ')}"
+
+  # Allow the CMake search path for cross-compiled libraries to be extended
+  # by passing -DCMAKE_FIND_ROOT_PATH when running cmake.
+  plat.provision_with "sed -i 's/SET (CMAKE_FIND_ROOT_PATH/list (INSERT CMAKE_FIND_ROOT_PATH 0/' /etc/dpkg-cross/cmake/CMakeCross.txt"
+
+  plat.cross_compiled "true"
+  plat.output_dir File.join("deb", plat.get_codename, "PC1")
+
+  plat.vmpooler_template "debian-10-x86_64"
+
+  # NOTE: Bring your own image. The image is expected to satisfy the following
+  #       conditions:
+  #
+  #         - Runs SystemD
+  #         - Runs SSHD under SystemD
+  #           - SSHD allows pubkey access to the root user via a
+  #             key set by the VANAGON_SSH_KEY environment variable.
+  plat.docker_image ENV['VANAGON_DOCKER_IMAGE']
+  plat.ssh_port 4222
+  plat.docker_run_args ['--tmpfs=/tmp:exec',
+                        '--tmpfs=/run',
+                        '--volume=/sys/fs/cgroup:/sys/fs/cgroup:ro',
+                        # SystemD requires some elevated privilages.
+                        '--cap-add=SYS_ADMIN']
+end
diff --git a/configs/platforms/debian-9-armhf.rb b/configs/platforms/debian-9-armhf.rb
new file mode 100644
index 00000000..28b32d9f
--- /dev/null
+++ b/configs/platforms/debian-9-armhf.rb
@@ -0,0 +1,67 @@
+platform "debian-9-armhf" do |plat|
+  plat.servicedir "/lib/systemd/system"
+  plat.defaultdir "/etc/default"
+  plat.servicetype "systemd"
+  plat.codename "stretch"
+  plat.platform_triple "arm-linux-gnueabihf"
+
+  plat.install_build_dependencies_with "DEBIAN_FRONTEND=noninteractive; apt-get install -qy --no-install-recommends "
+
+  plat.provision_with "dpkg --add-architecture #{plat.get_architecture}"
+
+  packages = [
+    'build-essential', # Needed to make dpkg-buildpackage happy
+    'cmake',
+    "crossbuild-essential-#{plat.get_architecture}",
+    'debhelper',
+    'devscripts',
+    'fakeroot',
+    'gettext',
+    "libblkid-dev:#{plat.get_architecture}",
+    "libboost-chrono-dev:#{plat.get_architecture}",
+    "libboost-date-time-dev:#{plat.get_architecture}",
+    "libboost-filesystem-dev:#{plat.get_architecture}",
+    "libboost-locale-dev:#{plat.get_architecture}",
+    "libboost-log-dev:#{plat.get_architecture}",
+    "libboost-program-options-dev:#{plat.get_architecture}",
+    "libboost-random-dev:#{plat.get_architecture}",
+    "libboost-regex-dev:#{plat.get_architecture}",
+    "libboost-system-dev:#{plat.get_architecture}",
+    "libboost-thread-dev:#{plat.get_architecture}",
+    "libc6-dev:#{plat.get_architecture}",
+    "libbz2-dev:#{plat.get_architecture}",
+    "libreadline-dev:#{plat.get_architecture}",
+    "libyaml-cpp-dev:#{plat.get_architecture}",
+    'make',
+    'pkg-config',
+    'qemu-user-static',
+    'quilt',
+    'rsync',
+    "zlib1g-dev:#{plat.get_architecture}",
+  ]
+  plat.provision_with "export DEBIAN_FRONTEND=noninteractive; apt-get update -qq; apt-get install -qy --no-install-recommends #{packages.join(' ')}"
+
+  # Allow the CMake search path for cross-compiled libraries to be extended
+  # by passing -DCMAKE_FIND_ROOT_PATH when running cmake.
+  plat.provision_with "sed -i 's/SET (CMAKE_FIND_ROOT_PATH/list (INSERT CMAKE_FIND_ROOT_PATH 0/' /etc/dpkg-cross/cmake/CMakeCross.txt"
+
+  plat.cross_compiled "true"
+  plat.output_dir File.join("deb", plat.get_codename, "PC1")
+
+  plat.vmpooler_template "debian-9-x86_64"
+
+  # NOTE: Bring your own image. The image is expected to satisfy the following
+  #       conditions:
+  #
+  #         - Runs SystemD
+  #         - Runs SSHD under SystemD
+  #           - SSHD allows pubkey access to the root user via a
+  #             key set by the VANAGON_SSH_KEY environment variable.
+  plat.docker_image ENV['VANAGON_DOCKER_IMAGE']
+  plat.ssh_port 4222
+  plat.docker_run_args ['--tmpfs=/tmp:exec',
+                        '--tmpfs=/run',
+                        '--volume=/sys/fs/cgroup:/sys/fs/cgroup:ro',
+                        # SystemD requires some elevated privilages.
+                        '--cap-add=SYS_ADMIN']
+end
-- 
2.25.0

